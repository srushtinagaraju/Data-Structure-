#include<stdio.h>
#include<stdlib.h>

struct Node{
    int data;
    struct Node*next;
};
struct Node*createNode(int data){
    struct Node*newNode=(struct Node*)malloc(sizeof(struct Node));
    newNode->data=data;
    newNode->next=NULL;
    return newNode;
}
void insertAtfirst(struct Node**head,int data){
    struct Node* newNode=createNode(data);
    newNode->next=*head;
    *head=newNode;
}
void insertAtEnd(struct Node**head,int data){
    struct Node* newNode=createNode(data);
     if(*head==NULL){
        *head=newNode;
        return;
     }
     struct Node*temp=*head;
     while(temp->next!=NULL){
        temp=temp->next;
     }
     temp->next=newNode;
}
void insertAtPosition(struct Node**head,int data,int position){
    struct Node* newNode=createNode(data);
    if(position==-1){
        newNode->next= *head;
        * head=newNode;
        return;
    }
    struct Node* temp=*head;
    for(int i=1;i<position -1&& temp!=NULL;i++){
        temp=temp->next;
    }
    if(temp==NULL){
        printf("Position out of range\n");
        free(newNode);
        return;
    }
    newNode->next=temp;
    temp->next=newNode;
}
void display(struct Node*head){
    struct Node* temp= head;
    while(temp!=NULL){
        printf("%d",temp->data);
        temp=temp->next;
    }
}
void main(){
struct Node *head=NULL;
int choice,data,position;
while(1){
    printf("1.Insert at first position\n");
    printf("2.Insert at end\n");
    printf("3.Insert at any position\n");
    printf("4.Display\n");
    printf("5.Exit\n");
    printf("Enter your choice:\n");
    scanf("%d",&choice);

    switch(choice){
        case 1:
        printf("Enter data to insert:");
        scanf("%d",&data);
        insertAtfirst(&head,data);
        break;
        case 2:
        printf("Enter data to insert:");
        scanf("%d",&data);
        insertAtEnd(&head,data);
        break;
        case 3:
        printf("Enter data to insert:");
        scanf("%d",&data);
        printf("Enter position:");
        scanf("%d",&position);
        insertAtPosition(&head,data,position);
        break;
        case 4:
        printf("Elements are:\n");
        display(head);
        break;
        case 5:
        exit(0);
        break;
        default:
        printf("Invalid choice\n");
    }
}
}
