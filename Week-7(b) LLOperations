Using stack linked list

#include<stdio.h>
#include<stdlib.h>
struct node
{
 int data;
 struct node *next;
};
struct node *head = NULL;
void push(int val){
 struct node *newNode = malloc(sizeof(struct node));
 newNode->data = val;
 newNode->next = head;
 head = newNode;
}
void pop(){
 struct node *temp;
 if(head == NULL)
 printf("Stack is Empty\n");
 else
 {
 printf("Popped element = %d\n", head->data);
 temp = head;
 head = head->next;
 free(temp);
 }
}
void printList()
{
 struct node *temp = head;
 while(temp != NULL)
 {
 printf("%d->", temp->data);
 temp = temp->next;
 }
 printf("NULL\n");
}
int main(){
    int choice,value;
    while(1){
        printf("\n stack opertions:\n");
        printf("1.push\n");
        printf("2.pop\n");
        printf("3.display\n");
        printf("4.Exit\n");
        printf("Enter your choice:");
        scanf("%d",&choice);
        switch(choice){
            case 1:
            printf("Enter value to push:");
            scanf("%d",&value);
            push(value);
            break;
            case 2:
            pop();
            break;
            case 3:
            printList();
            break;
            case 4:
            printf("Exit\n");
            exit(0);
            default:
            printf("Invalid choice\n");
        }
    }
    return 0;
}


Using Queue linked list

#include<stdio.h>
#include<stdlib.h>
struct node{
 int data;
 struct node *next;
};
struct node *front = NULL, *rear = NULL;
void enqueue(int val){
 struct node *newNode = malloc(sizeof(struct node));
 newNode->data = val;
 newNode->next = NULL;
 if(front == NULL && rear == NULL)
 front = rear = newNode;
 else{
  rear->next = newNode;
  rear = newNode;
 }
}
void dequeue(){
 struct node *temp;
 if(front == NULL)
 printf("Queue is Empty. Unable to perform dequeue\n");
 else{
 temp = front;
 front = front->next;
 if(front == NULL)
 rear = NULL;
 free(temp);
 }
}
void printList()
{
 struct node *temp = front;
 while(temp)
 {
 printf("%d->",temp->data);
 temp = temp->next;
 }
 printf("NULL\n");
}
int main(){
    int choice,value;
    while(1){
        printf("\n queue opertions:\n");
        printf("1.enqueue\n");
        printf("2.dequeue\n");
        printf("3.display\n");
        printf("4.Exit\n");
        printf("Enter your choice:");
        scanf("%d",&choice);
        switch(choice){
            case 1:
            printf("Enter value to enqueue:");
            scanf("%d",&value);
            enqueue(value);
            break;
            case 2:
            dequeue();
            break;
            case 3:
            printList();
            break;
            case 4:
            printf("Exit\n");
            exit(0);
            default:
            printf("Invalid choice\n");
        }
    }
    return 0;
}


