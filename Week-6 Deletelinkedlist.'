#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

struct Node* head = NULL; 
void create(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;

    if (head == NULL) {
        head = newNode;
    } else {
        struct Node* temp = head;
        while (temp->next != NULL) {
            temp = temp->next;
        }
        temp->next = newNode;
    }
    printf("Node with data %d added to the list.\n", data);
}
void deleteFirst() {
    if (head == NULL) {
        printf("List is empty. No element to delete.\n");
        return;
    }
    struct Node* temp = head;
    head = head->next;
    printf("First element with data %d deleted.\n", temp->data);
    free(temp);
}

void deleteSpecified(int data) {
    if (head == NULL) {
        printf("List is empty. No element to delete.\n");
        return;
    }
    
    if (head->data == data) {
        deleteFirst();
        return;
    }

    struct Node* temp = head;
    struct Node* prev = NULL;
    
    while (temp != NULL && temp->data != data) {
        prev = temp;
        temp = temp->next;
    }

    if (temp == NULL) {
        printf("Element with data %d not found.\n", data);
        return;
    }

    prev->next = temp->next;
    printf("Element with data %d deleted.\n", data);
    free(temp);
} 
void deleteLast() {
    if (head == NULL) {
        printf("List is empty. No element to delete.\n");
        return;
    }

    if (head->next == NULL) {
        printf("Last element with data %d deleted.\n", head->data);
        free(head);
        head = NULL;
        return;
    }

    struct Node* temp = head;
    struct Node* prev = NULL;

    while (temp->next != NULL) {
        prev = temp;
        temp = temp->next;
    }

    prev->next = NULL;
    printf("Last element with data %d deleted.\n", temp->data);
    free(temp);
}
void display() {
    if (head == NULL) {
        printf("List is empty.\n");
        return;
    }

    struct Node* temp = head;
    printf("Linked List: ");
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}

int main() {
    int choice, data;

    while (1) {
        printf("\nLinked List Operations:\n");
        printf("1. Create\n");
        printf("2. Delete First Element\n");
        printf("3. Delete Specified Element\n");
        printf("4. Delete Last Element\n");
        printf("5. Display\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter the data to insert: ");
                scanf("%d", &data);
                create(data);
                break;
            case 2:
                deleteFirst();
                break;
            case 3:
                printf("Enter the data of the element to delete: ");
                scanf("%d", &data);
                deleteSpecified(data);
                break;
            case 4:
                deleteLast();
                break;
            case 5:
                display();
                break;
            case 6:
                exit(0);
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}
